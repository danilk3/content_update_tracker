/*
 * This file is generated by jOOQ.
 */

package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;

import java.time.OffsetDateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.TgChat;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TgChatRecord extends UpdatableRecordImpl<TgChatRecord> implements Record2<Long, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tg_chat.chat_id</code>.
     */
    public void setChatId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tg_chat.chat_id</code>.
     */
    public Long getChatId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.tg_chat.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tg_chat.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, OffsetDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, OffsetDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TgChat.TG_CHAT.CHAT_ID;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return TgChat.TG_CHAT.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getChatId();
    }

    @Override
    public OffsetDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getChatId();
    }

    @Override
    public OffsetDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public TgChatRecord value1(Long value) {
        setChatId(value);
        return this;
    }

    @Override
    public TgChatRecord value2(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TgChatRecord values(Long value1, OffsetDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TgChatRecord
     */
    public TgChatRecord() {
        super(TgChat.TG_CHAT);
    }

    /**
     * Create a detached, initialised TgChatRecord
     */
    public TgChatRecord(Long chatId, OffsetDateTime createdAt) {
        super(TgChat.TG_CHAT);

        setChatId(chatId);
        setCreatedAt(createdAt);
    }
}
