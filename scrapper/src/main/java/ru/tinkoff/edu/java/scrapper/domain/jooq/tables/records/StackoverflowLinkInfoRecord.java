/*
 * This file is generated by jOOQ.
 */

package ru.tinkoff.edu.java.scrapper.domain.jooq.tables.records;

import java.time.OffsetDateTime;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;
import ru.tinkoff.edu.java.scrapper.domain.jooq.tables.StackoverflowLinkInfo;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class StackoverflowLinkInfoRecord extends UpdatableRecordImpl<StackoverflowLinkInfoRecord>
    implements Record10<Integer, Long, Long, String[], Boolean, Long, Long, Integer, OffsetDateTime, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.stackoverflow_link_info.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.question_id</code>.
     */
    public void setQuestionId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.question_id</code>.
     */
    public Long getQuestionId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.link_id</code>.
     */
    public void setLinkId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.link_id</code>.
     */
    public Long getLinkId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.tags</code>.
     */
    public void setTags(String[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.tags</code>.
     */
    public String[] getTags() {
        return (String[]) get(3);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.is_answered</code>.
     */
    public void setIsAnswered(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.is_answered</code>.
     */
    public Boolean getIsAnswered() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.view_count</code>.
     */
    public void setViewCount(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.view_count</code>.
     */
    public Long getViewCount() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.answer_count</code>.
     */
    public void setAnswerCount(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.answer_count</code>.
     */
    public Long getAnswerCount() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.score</code>.
     */
    public void setScore(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.score</code>.
     */
    public Integer getScore() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.creation_date</code>.
     */
    public void setCreationDate(OffsetDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.creation_date</code>.
     */
    public OffsetDateTime getCreationDate() {
        return (OffsetDateTime) get(8);
    }

    /**
     * Setter for <code>public.stackoverflow_link_info.title</code>.
     */
    public void setTitle(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.stackoverflow_link_info.title</code>.
     */
    public String getTitle() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Long, Long, String[], Boolean, Long, Long, Integer, OffsetDateTime, String> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, Long, Long, String[], Boolean, Long, Long, Integer, OffsetDateTime, String> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.ID;
    }

    @Override
    public Field<Long> field2() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.QUESTION_ID;
    }

    @Override
    public Field<Long> field3() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.LINK_ID;
    }

    @Override
    public Field<String[]> field4() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.TAGS;
    }

    @Override
    public Field<Boolean> field5() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.IS_ANSWERED;
    }

    @Override
    public Field<Long> field6() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.VIEW_COUNT;
    }

    @Override
    public Field<Long> field7() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.ANSWER_COUNT;
    }

    @Override
    public Field<Integer> field8() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.SCORE;
    }

    @Override
    public Field<OffsetDateTime> field9() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.CREATION_DATE;
    }

    @Override
    public Field<String> field10() {
        return StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO.TITLE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getQuestionId();
    }

    @Override
    public Long component3() {
        return getLinkId();
    }

    @Override
    public String[] component4() {
        return getTags();
    }

    @Override
    public Boolean component5() {
        return getIsAnswered();
    }

    @Override
    public Long component6() {
        return getViewCount();
    }

    @Override
    public Long component7() {
        return getAnswerCount();
    }

    @Override
    public Integer component8() {
        return getScore();
    }

    @Override
    public OffsetDateTime component9() {
        return getCreationDate();
    }

    @Override
    public String component10() {
        return getTitle();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getQuestionId();
    }

    @Override
    public Long value3() {
        return getLinkId();
    }

    @Override
    public String[] value4() {
        return getTags();
    }

    @Override
    public Boolean value5() {
        return getIsAnswered();
    }

    @Override
    public Long value6() {
        return getViewCount();
    }

    @Override
    public Long value7() {
        return getAnswerCount();
    }

    @Override
    public Integer value8() {
        return getScore();
    }

    @Override
    public OffsetDateTime value9() {
        return getCreationDate();
    }

    @Override
    public String value10() {
        return getTitle();
    }

    @Override
    public StackoverflowLinkInfoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value2(Long value) {
        setQuestionId(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value3(Long value) {
        setLinkId(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value4(String[] value) {
        setTags(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value5(Boolean value) {
        setIsAnswered(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value6(Long value) {
        setViewCount(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value7(Long value) {
        setAnswerCount(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value8(Integer value) {
        setScore(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value9(OffsetDateTime value) {
        setCreationDate(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord value10(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public StackoverflowLinkInfoRecord values(
        Integer value1,
        Long value2,
        Long value3,
        String[] value4,
        Boolean value5,
        Long value6,
        Long value7,
        Integer value8,
        OffsetDateTime value9,
        String value10
    ) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StackoverflowLinkInfoRecord
     */
    public StackoverflowLinkInfoRecord() {
        super(StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO);
    }

    /**
     * Create a detached, initialised StackoverflowLinkInfoRecord
     */
    public StackoverflowLinkInfoRecord(
        Integer id,
        Long questionId,
        Long linkId,
        String[] tags,
        Boolean isAnswered,
        Long viewCount,
        Long answerCount,
        Integer score,
        OffsetDateTime creationDate,
        String title
    ) {
        super(StackoverflowLinkInfo.STACKOVERFLOW_LINK_INFO);

        setId(id);
        setQuestionId(questionId);
        setLinkId(linkId);
        setTags(tags);
        setIsAnswered(isAnswered);
        setViewCount(viewCount);
        setAnswerCount(answerCount);
        setScore(score);
        setCreationDate(creationDate);
        setTitle(title);
    }
}
